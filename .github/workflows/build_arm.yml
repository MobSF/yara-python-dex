name: Build aarch64 Linux
on: [push, pull_request]
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          #   cibw_archs: "native"
          - os: ubuntu-latest
            cibw_archs: "aarch64"
          # - os: windows-latest
          #   cibw_archs: "native ARM64"
          # - os: macos-latest
          #   cibw_archs: "native arm64"

    steps:
      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5.3.0
        name: Install Python
      - name: Get submodules
        run: git submodule update --init --recursive
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_SKIP: "pp*"
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  publish:
     needs: build_wheels
     name: Publish to PyPI
     runs-on: ubuntu-latest

     steps:
     - name: Set up Python
       uses: actions/setup-python@v5.3.0
       with:
         python-version: '3.x'
     - name: Install twine
       run: |
         python -m pip install --upgrade pip
         pip install twine
     - name: Download Artifacts
       uses: actions/download-artifact@v3
       with:
         name: wheels
         path: ./wheelhouse
     - name: Publish
       env:
         TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
       run: twine upload ./wheelhouse/* --skip-existing
