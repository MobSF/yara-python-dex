name: Build

on:
  release:
    types: [created]

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==1.11.0

      - name: Build wheels for Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          git submodule update --init --recursive
          python -m cibuildwheel --output-dir wheels
        env:
           CIBW_SKIP: "cp27-* pp27-*"  # skip Python 2.7 wheels
      
      - name: Build wheels for mac and manylinux
        if: "!startsWith(matrix.os, 'windows')"
        run: |
          git submodule update --init --recursive
          python -m cibuildwheel --output-dir wheels
        env:
           CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
           CIBW_ARCHS_LINUX: "auto aarch64"

      - uses: actions/upload-artifact@v2
        name: Upload wheels
        with:
          name: wheels
          path: ./wheels/*.whl

  publish:
     needs: build
     name: Publish to PyPI
     runs-on: ubuntu-latest

     steps:
     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.x'
     - name: Install twine
       run: |
         python -m pip install --upgrade pip
         pip install twine
     - name: Download Artifacts
       uses: actions/download-artifact@v2
       with:
         name: wheels
         path: ./wheels
     - name: Publish
       env:
         TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
       run: twine upload ./wheels/*
